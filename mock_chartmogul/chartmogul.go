// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/chartmogul/chartmogul-go (interfaces: IApi)

// Package mock_chartmogul_go is a generated GoMock package.
package mock_chartmogul_go

import (
	chartmogul "github.com/chartmogul/chartmogul-go"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIApi is a mock of IApi interface
type MockIApi struct {
	ctrl     *gomock.Controller
	recorder *MockIApiMockRecorder
}

// MockIApiMockRecorder is the mock recorder for MockIApi
type MockIApiMockRecorder struct {
	mock *MockIApi
}

// NewMockIApi creates a new mock instance
func NewMockIApi(ctrl *gomock.Controller) *MockIApi {
	mock := &MockIApi{ctrl: ctrl}
	mock.recorder = &MockIApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIApi) EXPECT() *MockIApiMockRecorder {
	return m.recorder
}

// AddCustomAttributesToCustomer mocks base method
func (m *MockIApi) AddCustomAttributesToCustomer(arg0 string, arg1 []*chartmogul.CustomAttribute) (*chartmogul.CustomAttributes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCustomAttributesToCustomer", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.CustomAttributes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddCustomAttributesToCustomer indicates an expected call of AddCustomAttributesToCustomer
func (mr *MockIApiMockRecorder) AddCustomAttributesToCustomer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCustomAttributesToCustomer", reflect.TypeOf((*MockIApi)(nil).AddCustomAttributesToCustomer), arg0, arg1)
}

// AddCustomAttributesWithEmail mocks base method
func (m *MockIApi) AddCustomAttributesWithEmail(arg0 string, arg1 []*chartmogul.CustomAttribute) (*chartmogul.Customers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCustomAttributesWithEmail", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Customers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddCustomAttributesWithEmail indicates an expected call of AddCustomAttributesWithEmail
func (mr *MockIApiMockRecorder) AddCustomAttributesWithEmail(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCustomAttributesWithEmail", reflect.TypeOf((*MockIApi)(nil).AddCustomAttributesWithEmail), arg0, arg1)
}

// AddTagsToCustomer mocks base method
func (m *MockIApi) AddTagsToCustomer(arg0 string, arg1 []string) (*chartmogul.TagsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTagsToCustomer", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.TagsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTagsToCustomer indicates an expected call of AddTagsToCustomer
func (mr *MockIApiMockRecorder) AddTagsToCustomer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTagsToCustomer", reflect.TypeOf((*MockIApi)(nil).AddTagsToCustomer), arg0, arg1)
}

// AddTagsToCustomersWithEmail mocks base method
func (m *MockIApi) AddTagsToCustomersWithEmail(arg0 string, arg1 []string) (*chartmogul.Customers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTagsToCustomersWithEmail", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Customers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTagsToCustomersWithEmail indicates an expected call of AddTagsToCustomersWithEmail
func (mr *MockIApiMockRecorder) AddTagsToCustomersWithEmail(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTagsToCustomersWithEmail", reflect.TypeOf((*MockIApi)(nil).AddTagsToCustomersWithEmail), arg0, arg1)
}

// CancelSubscription mocks base method
func (m *MockIApi) CancelSubscription(arg0 string, arg1 *chartmogul.CancelSubscriptionParams) (*chartmogul.Subscription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CancelSubscription", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Subscription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CancelSubscription indicates an expected call of CancelSubscription
func (mr *MockIApiMockRecorder) CancelSubscription(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CancelSubscription", reflect.TypeOf((*MockIApi)(nil).CancelSubscription), arg0, arg1)
}

// CreateCustomer mocks base method
func (m *MockIApi) CreateCustomer(arg0 *chartmogul.NewCustomer) (*chartmogul.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCustomer", arg0)
	ret0, _ := ret[0].(*chartmogul.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCustomer indicates an expected call of CreateCustomer
func (mr *MockIApiMockRecorder) CreateCustomer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCustomer", reflect.TypeOf((*MockIApi)(nil).CreateCustomer), arg0)
}

// CreateDataSource mocks base method
func (m *MockIApi) CreateDataSource(arg0 string) (*chartmogul.DataSource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDataSource", arg0)
	ret0, _ := ret[0].(*chartmogul.DataSource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDataSource indicates an expected call of CreateDataSource
func (mr *MockIApiMockRecorder) CreateDataSource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataSource", reflect.TypeOf((*MockIApi)(nil).CreateDataSource), arg0)
}

// CreateDataSourceWithSystem mocks base method
func (m *MockIApi) CreateDataSourceWithSystem(arg0 *chartmogul.DataSource) (*chartmogul.DataSource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDataSourceWithSystem", arg0)
	ret0, _ := ret[0].(*chartmogul.DataSource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDataSourceWithSystem indicates an expected call of CreateDataSourceWithSystem
func (mr *MockIApiMockRecorder) CreateDataSourceWithSystem(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataSourceWithSystem", reflect.TypeOf((*MockIApi)(nil).CreateDataSourceWithSystem), arg0)
}

// CreateInvoices mocks base method
func (m *MockIApi) CreateInvoices(arg0 []*chartmogul.Invoice, arg1 string) (*chartmogul.Invoices, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInvoices", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Invoices)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInvoices indicates an expected call of CreateInvoices
func (mr *MockIApiMockRecorder) CreateInvoices(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInvoices", reflect.TypeOf((*MockIApi)(nil).CreateInvoices), arg0, arg1)
}

// CreatePlan mocks base method
func (m *MockIApi) CreatePlan(arg0 *chartmogul.Plan) (*chartmogul.Plan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePlan", arg0)
	ret0, _ := ret[0].(*chartmogul.Plan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePlan indicates an expected call of CreatePlan
func (mr *MockIApiMockRecorder) CreatePlan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePlan", reflect.TypeOf((*MockIApi)(nil).CreatePlan), arg0)
}

// CreatePlanGroup mocks base method
func (m *MockIApi) CreatePlanGroup(arg0 *chartmogul.PlanGroup) (*chartmogul.PlanGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePlanGroup", arg0)
	ret0, _ := ret[0].(*chartmogul.PlanGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePlanGroup indicates an expected call of CreatePlanGroup
func (mr *MockIApiMockRecorder) CreatePlanGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePlanGroup", reflect.TypeOf((*MockIApi)(nil).CreatePlanGroup), arg0)
}

// CreateTransaction mocks base method
func (m *MockIApi) CreateTransaction(arg0 *chartmogul.Transaction, arg1 string) (*chartmogul.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTransaction", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTransaction indicates an expected call of CreateTransaction
func (mr *MockIApiMockRecorder) CreateTransaction(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTransaction", reflect.TypeOf((*MockIApi)(nil).CreateTransaction), arg0, arg1)
}

// DeleteCustomer mocks base method
func (m *MockIApi) DeleteCustomer(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCustomer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCustomer indicates an expected call of DeleteCustomer
func (mr *MockIApiMockRecorder) DeleteCustomer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCustomer", reflect.TypeOf((*MockIApi)(nil).DeleteCustomer), arg0)
}

// DeleteCustomerInvoices mocks base method
func (m *MockIApi) DeleteCustomerInvoices(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCustomerInvoices", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCustomerInvoices indicates an expected call of DeleteCustomerInvoices
func (mr *MockIApiMockRecorder) DeleteCustomerInvoices(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCustomerInvoices", reflect.TypeOf((*MockIApi)(nil).DeleteCustomerInvoices), arg0, arg1)
}

// DeleteCustomerInvoicesV2 mocks base method
func (m *MockIApi) DeleteCustomerInvoicesV2(arg0, arg1 string, arg2 *chartmogul.DeleteCustomerInvoicesParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCustomerInvoicesV2", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCustomerInvoicesV2 indicates an expected call of DeleteCustomerInvoicesV2
func (mr *MockIApiMockRecorder) DeleteCustomerInvoicesV2(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCustomerInvoicesV2", reflect.TypeOf((*MockIApi)(nil).DeleteCustomerInvoicesV2), arg0, arg1, arg2)
}

// DeleteDataSource mocks base method
func (m *MockIApi) DeleteDataSource(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDataSource", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDataSource indicates an expected call of DeleteDataSource
func (mr *MockIApiMockRecorder) DeleteDataSource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDataSource", reflect.TypeOf((*MockIApi)(nil).DeleteDataSource), arg0)
}

// DeleteInvoice mocks base method
func (m *MockIApi) DeleteInvoice(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInvoice", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInvoice indicates an expected call of DeleteInvoice
func (mr *MockIApiMockRecorder) DeleteInvoice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInvoice", reflect.TypeOf((*MockIApi)(nil).DeleteInvoice), arg0)
}

// DeletePlan mocks base method
func (m *MockIApi) DeletePlan(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePlan", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePlan indicates an expected call of DeletePlan
func (mr *MockIApiMockRecorder) DeletePlan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePlan", reflect.TypeOf((*MockIApi)(nil).DeletePlan), arg0)
}

// DeletePlanGroup mocks base method
func (m *MockIApi) DeletePlanGroup(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePlanGroup", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePlanGroup indicates an expected call of DeletePlanGroup
func (mr *MockIApiMockRecorder) DeletePlanGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePlanGroup", reflect.TypeOf((*MockIApi)(nil).DeletePlanGroup), arg0)
}

// EmptyDataSource mocks base method
func (m *MockIApi) EmptyDataSource(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EmptyDataSource", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// EmptyDataSource indicates an expected call of EmptyDataSource
func (mr *MockIApiMockRecorder) EmptyDataSource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EmptyDataSource", reflect.TypeOf((*MockIApi)(nil).EmptyDataSource), arg0)
}

// ListAllInvoices mocks base method
func (m *MockIApi) ListAllInvoices(arg0 *chartmogul.ListAllInvoicesParams) (*chartmogul.Invoices, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAllInvoices", arg0)
	ret0, _ := ret[0].(*chartmogul.Invoices)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAllInvoices indicates an expected call of ListAllInvoices
func (mr *MockIApiMockRecorder) ListAllInvoices(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAllInvoices", reflect.TypeOf((*MockIApi)(nil).ListAllInvoices), arg0)
}

// ListCustomers mocks base method
func (m *MockIApi) ListCustomers(arg0 *chartmogul.ListCustomersParams) (*chartmogul.Customers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCustomers", arg0)
	ret0, _ := ret[0].(*chartmogul.Customers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCustomers indicates an expected call of ListCustomers
func (mr *MockIApiMockRecorder) ListCustomers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCustomers", reflect.TypeOf((*MockIApi)(nil).ListCustomers), arg0)
}

// ListDataSources mocks base method
func (m *MockIApi) ListDataSources() (*chartmogul.DataSources, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDataSources")
	ret0, _ := ret[0].(*chartmogul.DataSources)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDataSources indicates an expected call of ListDataSources
func (mr *MockIApiMockRecorder) ListDataSources() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDataSources", reflect.TypeOf((*MockIApi)(nil).ListDataSources))
}

// ListDataSourcesWithFilters mocks base method
func (m *MockIApi) ListDataSourcesWithFilters(arg0 *chartmogul.ListDataSourcesParams) (*chartmogul.DataSources, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDataSourcesWithFilters", arg0)
	ret0, _ := ret[0].(*chartmogul.DataSources)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDataSourcesWithFilters indicates an expected call of ListDataSourcesWithFilters
func (mr *MockIApiMockRecorder) ListDataSourcesWithFilters(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDataSourcesWithFilters", reflect.TypeOf((*MockIApi)(nil).ListDataSourcesWithFilters), arg0)
}

// ListInvoices mocks base method
func (m *MockIApi) ListInvoices(arg0 *chartmogul.Cursor, arg1 string) (*chartmogul.Invoices, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInvoices", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Invoices)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInvoices indicates an expected call of ListInvoices
func (mr *MockIApiMockRecorder) ListInvoices(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInvoices", reflect.TypeOf((*MockIApi)(nil).ListInvoices), arg0, arg1)
}

// ListPlanGroupPlans mocks base method
func (m *MockIApi) ListPlanGroupPlans(arg0 *chartmogul.Cursor, arg1 string) (*chartmogul.PlanGroupPlans, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPlanGroupPlans", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.PlanGroupPlans)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPlanGroupPlans indicates an expected call of ListPlanGroupPlans
func (mr *MockIApiMockRecorder) ListPlanGroupPlans(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPlanGroupPlans", reflect.TypeOf((*MockIApi)(nil).ListPlanGroupPlans), arg0, arg1)
}

// ListPlanGroups mocks base method
func (m *MockIApi) ListPlanGroups(arg0 *chartmogul.Cursor) (*chartmogul.PlanGroups, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPlanGroups", arg0)
	ret0, _ := ret[0].(*chartmogul.PlanGroups)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPlanGroups indicates an expected call of ListPlanGroups
func (mr *MockIApiMockRecorder) ListPlanGroups(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPlanGroups", reflect.TypeOf((*MockIApi)(nil).ListPlanGroups), arg0)
}

// ListPlans mocks base method
func (m *MockIApi) ListPlans(arg0 *chartmogul.ListPlansParams) (*chartmogul.Plans, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPlans", arg0)
	ret0, _ := ret[0].(*chartmogul.Plans)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPlans indicates an expected call of ListPlans
func (mr *MockIApiMockRecorder) ListPlans(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPlans", reflect.TypeOf((*MockIApi)(nil).ListPlans), arg0)
}

// ListSubscriptions mocks base method
func (m *MockIApi) ListSubscriptions(arg0 *chartmogul.Cursor, arg1 string) (*chartmogul.Subscriptions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSubscriptions", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Subscriptions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSubscriptions indicates an expected call of ListSubscriptions
func (mr *MockIApiMockRecorder) ListSubscriptions(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSubscriptions", reflect.TypeOf((*MockIApi)(nil).ListSubscriptions), arg0, arg1)
}

// MergeCustomers mocks base method
func (m *MockIApi) MergeCustomers(arg0 *chartmogul.MergeCustomersParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MergeCustomers", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// MergeCustomers indicates an expected call of MergeCustomers
func (mr *MockIApiMockRecorder) MergeCustomers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MergeCustomers", reflect.TypeOf((*MockIApi)(nil).MergeCustomers), arg0)
}

// MetricsListCustomerActivities mocks base method
func (m *MockIApi) MetricsListCustomerActivities(arg0 *chartmogul.Cursor, arg1 string) (*chartmogul.MetricsCustomerActivities, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsListCustomerActivities", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.MetricsCustomerActivities)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (mr *MockIApiMockRecorder) MetricsListCustomerActivities(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsListCustomerActivities", reflect.TypeOf((*MockIApi)(nil).MetricsListCustomerActivities), arg0, arg1)
}


// MetricsListCustomerActivities mocks base method
func (m *MockIApi) MetricsListActivities(arg0 *chartmogul.Cursor, arg1 string) (*chartmogul.MetricsActivities, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsListActivities", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.MetricsActivities)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsListCustomerActivities indicates an expected call of MetricsListActivities
func (mr *MockIApiMockRecorder) MetricsListActivities(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsListActivities", reflect.TypeOf((*MockIApi)(nil).MetricsListActivities), arg0, arg1)
}


// MetricsListCustomerSubscriptions mocks base method
func (m *MockIApi) MetricsListCustomerSubscriptions(arg0 *chartmogul.Cursor, arg1 string) (*chartmogul.MetricsCustomerSubscriptions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsListCustomerSubscriptions", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.MetricsCustomerSubscriptions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsListSubscriptions indicates an expected call of MetricsListSubscriptions
func (mr *MockIApiMockRecorder) MetricsListCustomerSubscriptions(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsListCustomerSubscriptions", reflect.TypeOf((*MockIApi)(nil).MetricsListCustomerSubscriptions), arg0, arg1)
}

// MetricsRetrieveARPA mocks base method
func (m *MockIApi) MetricsRetrieveARPA(arg0 *chartmogul.MetricsFilter) (*chartmogul.ARPAResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsRetrieveARPA", arg0)
	ret0, _ := ret[0].(*chartmogul.ARPAResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsRetrieveARPA indicates an expected call of MetricsRetrieveARPA
func (mr *MockIApiMockRecorder) MetricsRetrieveARPA(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsRetrieveARPA", reflect.TypeOf((*MockIApi)(nil).MetricsRetrieveARPA), arg0)
}

// MetricsRetrieveARR mocks base method
func (m *MockIApi) MetricsRetrieveARR(arg0 *chartmogul.MetricsFilter) (*chartmogul.ARRResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsRetrieveARR", arg0)
	ret0, _ := ret[0].(*chartmogul.ARRResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsRetrieveARR indicates an expected call of MetricsRetrieveARR
func (mr *MockIApiMockRecorder) MetricsRetrieveARR(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsRetrieveARR", reflect.TypeOf((*MockIApi)(nil).MetricsRetrieveARR), arg0)
}

// MetricsRetrieveASP mocks base method
func (m *MockIApi) MetricsRetrieveASP(arg0 *chartmogul.MetricsFilter) (*chartmogul.ASPResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsRetrieveASP", arg0)
	ret0, _ := ret[0].(*chartmogul.ASPResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsRetrieveASP indicates an expected call of MetricsRetrieveASP
func (mr *MockIApiMockRecorder) MetricsRetrieveASP(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsRetrieveASP", reflect.TypeOf((*MockIApi)(nil).MetricsRetrieveASP), arg0)
}

// MetricsRetrieveAll mocks base method
func (m *MockIApi) MetricsRetrieveAll(arg0 *chartmogul.MetricsFilter) (*chartmogul.MetricsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsRetrieveAll", arg0)
	ret0, _ := ret[0].(*chartmogul.MetricsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsRetrieveAll indicates an expected call of MetricsRetrieveAll
func (mr *MockIApiMockRecorder) MetricsRetrieveAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsRetrieveAll", reflect.TypeOf((*MockIApi)(nil).MetricsRetrieveAll), arg0)
}

// MetricsRetrieveCustomerChurnRate mocks base method
func (m *MockIApi) MetricsRetrieveCustomerChurnRate(arg0 *chartmogul.MetricsFilter) (*chartmogul.CustomerChurnRateResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsRetrieveCustomerChurnRate", arg0)
	ret0, _ := ret[0].(*chartmogul.CustomerChurnRateResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsRetrieveCustomerChurnRate indicates an expected call of MetricsRetrieveCustomerChurnRate
func (mr *MockIApiMockRecorder) MetricsRetrieveCustomerChurnRate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsRetrieveCustomerChurnRate", reflect.TypeOf((*MockIApi)(nil).MetricsRetrieveCustomerChurnRate), arg0)
}

// MetricsRetrieveCustomerCount mocks base method
func (m *MockIApi) MetricsRetrieveCustomerCount(arg0 *chartmogul.MetricsFilter) (*chartmogul.CustomerCountResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsRetrieveCustomerCount", arg0)
	ret0, _ := ret[0].(*chartmogul.CustomerCountResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsRetrieveCustomerCount indicates an expected call of MetricsRetrieveCustomerCount
func (mr *MockIApiMockRecorder) MetricsRetrieveCustomerCount(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsRetrieveCustomerCount", reflect.TypeOf((*MockIApi)(nil).MetricsRetrieveCustomerCount), arg0)
}

// MetricsRetrieveLTV mocks base method
func (m *MockIApi) MetricsRetrieveLTV(arg0 *chartmogul.MetricsFilter) (*chartmogul.LTVResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsRetrieveLTV", arg0)
	ret0, _ := ret[0].(*chartmogul.LTVResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsRetrieveLTV indicates an expected call of MetricsRetrieveLTV
func (mr *MockIApiMockRecorder) MetricsRetrieveLTV(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsRetrieveLTV", reflect.TypeOf((*MockIApi)(nil).MetricsRetrieveLTV), arg0)
}

// MetricsRetrieveMRR mocks base method
func (m *MockIApi) MetricsRetrieveMRR(arg0 *chartmogul.MetricsFilter) (*chartmogul.MRRResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsRetrieveMRR", arg0)
	ret0, _ := ret[0].(*chartmogul.MRRResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsRetrieveMRR indicates an expected call of MetricsRetrieveMRR
func (mr *MockIApiMockRecorder) MetricsRetrieveMRR(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsRetrieveMRR", reflect.TypeOf((*MockIApi)(nil).MetricsRetrieveMRR), arg0)
}

// MetricsRetrieveMRRChurnRate mocks base method
func (m *MockIApi) MetricsRetrieveMRRChurnRate(arg0 *chartmogul.MetricsFilter) (*chartmogul.MRRChurnRateResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricsRetrieveMRRChurnRate", arg0)
	ret0, _ := ret[0].(*chartmogul.MRRChurnRateResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricsRetrieveMRRChurnRate indicates an expected call of MetricsRetrieveMRRChurnRate
func (mr *MockIApiMockRecorder) MetricsRetrieveMRRChurnRate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricsRetrieveMRRChurnRate", reflect.TypeOf((*MockIApi)(nil).MetricsRetrieveMRRChurnRate), arg0)
}

// Ping mocks base method
func (m *MockIApi) Ping() (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Ping indicates an expected call of Ping
func (mr *MockIApiMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockIApi)(nil).Ping))
}

// PurgeDataSource mocks base method
func (m *MockIApi) PurgeDataSource(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PurgeDataSource", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PurgeDataSource indicates an expected call of PurgeDataSource
func (mr *MockIApiMockRecorder) PurgeDataSource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PurgeDataSource", reflect.TypeOf((*MockIApi)(nil).PurgeDataSource), arg0)
}

// RemoveCustomAttributes mocks base method
func (m *MockIApi) RemoveCustomAttributes(arg0 string, arg1 []string) (*chartmogul.CustomAttributes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveCustomAttributes", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.CustomAttributes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RemoveCustomAttributes indicates an expected call of RemoveCustomAttributes
func (mr *MockIApiMockRecorder) RemoveCustomAttributes(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveCustomAttributes", reflect.TypeOf((*MockIApi)(nil).RemoveCustomAttributes), arg0, arg1)
}

// RemoveTagsFromCustomer mocks base method
func (m *MockIApi) RemoveTagsFromCustomer(arg0 string, arg1 []string) (*chartmogul.TagsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveTagsFromCustomer", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.TagsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RemoveTagsFromCustomer indicates an expected call of RemoveTagsFromCustomer
func (mr *MockIApiMockRecorder) RemoveTagsFromCustomer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveTagsFromCustomer", reflect.TypeOf((*MockIApi)(nil).RemoveTagsFromCustomer), arg0, arg1)
}

// RetrieveCustomer mocks base method
func (m *MockIApi) RetrieveCustomer(arg0 string) (*chartmogul.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveCustomer", arg0)
	ret0, _ := ret[0].(*chartmogul.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveCustomer indicates an expected call of RetrieveCustomer
func (mr *MockIApiMockRecorder) RetrieveCustomer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveCustomer", reflect.TypeOf((*MockIApi)(nil).RetrieveCustomer), arg0)
}

// RetrieveCustomersAttributes mocks base method
func (m *MockIApi) RetrieveCustomersAttributes(arg0 string) (*chartmogul.Attributes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveCustomersAttributes", arg0)
	ret0, _ := ret[0].(*chartmogul.Attributes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveCustomersAttributes indicates an expected call of RetrieveCustomersAttributes
func (mr *MockIApiMockRecorder) RetrieveCustomersAttributes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveCustomersAttributes", reflect.TypeOf((*MockIApi)(nil).RetrieveCustomersAttributes), arg0)
}

// RetrieveDataSource mocks base method
func (m *MockIApi) RetrieveDataSource(arg0 string) (*chartmogul.DataSource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveDataSource", arg0)
	ret0, _ := ret[0].(*chartmogul.DataSource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveDataSource indicates an expected call of RetrieveDataSource
func (mr *MockIApiMockRecorder) RetrieveDataSource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveDataSource", reflect.TypeOf((*MockIApi)(nil).RetrieveDataSource), arg0)
}

// RetrieveInvoice mocks base method
func (m *MockIApi) RetrieveInvoice(arg0 string) (*chartmogul.Invoice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveInvoice", arg0)
	ret0, _ := ret[0].(*chartmogul.Invoice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveInvoice indicates an expected call of RetrieveInvoice
func (mr *MockIApiMockRecorder) RetrieveInvoice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveInvoice", reflect.TypeOf((*MockIApi)(nil).RetrieveInvoice), arg0)
}

// RetrievePlan mocks base method
func (m *MockIApi) RetrievePlan(arg0 string) (*chartmogul.Plan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrievePlan", arg0)
	ret0, _ := ret[0].(*chartmogul.Plan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrievePlan indicates an expected call of RetrievePlan
func (mr *MockIApiMockRecorder) RetrievePlan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrievePlan", reflect.TypeOf((*MockIApi)(nil).RetrievePlan), arg0)
}

// RetrievePlanGroup mocks base method
func (m *MockIApi) RetrievePlanGroup(arg0 string) (*chartmogul.PlanGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrievePlanGroup", arg0)
	ret0, _ := ret[0].(*chartmogul.PlanGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrievePlanGroup indicates an expected call of RetrievePlanGroup
func (mr *MockIApiMockRecorder) RetrievePlanGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrievePlanGroup", reflect.TypeOf((*MockIApi)(nil).RetrievePlanGroup), arg0)
}

// SearchCustomers mocks base method
func (m *MockIApi) SearchCustomers(arg0 *chartmogul.SearchCustomersParams) (*chartmogul.Customers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchCustomers", arg0)
	ret0, _ := ret[0].(*chartmogul.Customers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchCustomers indicates an expected call of SearchCustomers
func (mr *MockIApiMockRecorder) SearchCustomers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchCustomers", reflect.TypeOf((*MockIApi)(nil).SearchCustomers), arg0)
}

// UpdateCustomAttributesOfCustomer mocks base method
func (m *MockIApi) UpdateCustomAttributesOfCustomer(arg0 string, arg1 map[string]interface{}) (*chartmogul.CustomAttributes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCustomAttributesOfCustomer", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.CustomAttributes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateCustomAttributesOfCustomer indicates an expected call of UpdateCustomAttributesOfCustomer
func (mr *MockIApiMockRecorder) UpdateCustomAttributesOfCustomer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCustomAttributesOfCustomer", reflect.TypeOf((*MockIApi)(nil).UpdateCustomAttributesOfCustomer), arg0, arg1)
}

// UpdateCustomer mocks base method
func (m *MockIApi) UpdateCustomer(arg0 *chartmogul.Customer, arg1 string) (*chartmogul.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCustomer", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateCustomer indicates an expected call of UpdateCustomer
func (mr *MockIApiMockRecorder) UpdateCustomer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCustomer", reflect.TypeOf((*MockIApi)(nil).UpdateCustomer), arg0, arg1)
}

// UpdateCustomerV2 mocks base method
func (m *MockIApi) UpdateCustomerV2(arg0 *chartmogul.UpdateCustomer, arg1 string) (*chartmogul.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCustomerV2", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateCustomerV2 indicates an expected call of UpdateCustomerV2
func (mr *MockIApiMockRecorder) UpdateCustomerV2(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCustomerV2", reflect.TypeOf((*MockIApi)(nil).UpdateCustomerV2), arg0, arg1)
}

// UpdatePlan mocks base method
func (m *MockIApi) UpdatePlan(arg0 *chartmogul.Plan, arg1 string) (*chartmogul.Plan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePlan", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.Plan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdatePlan indicates an expected call of UpdatePlan
func (mr *MockIApiMockRecorder) UpdatePlan(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePlan", reflect.TypeOf((*MockIApi)(nil).UpdatePlan), arg0, arg1)
}

// UpdatePlanGroup mocks base method
func (m *MockIApi) UpdatePlanGroup(arg0 *chartmogul.PlanGroup, arg1 string) (*chartmogul.PlanGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePlanGroup", arg0, arg1)
	ret0, _ := ret[0].(*chartmogul.PlanGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdatePlanGroup indicates an expected call of UpdatePlanGroup
func (mr *MockIApiMockRecorder) UpdatePlanGroup(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePlanGroup", reflect.TypeOf((*MockIApi)(nil).UpdatePlanGroup), arg0, arg1)
}
